import scapy.all as scapy

def sniff_packets(interface):
    scapy.sniff(iface=interface, store=False, prn=process_packet)

def process_packet(packet):
    if packet.haslayer(scapy.IP):
        source_ip = packet[scapy.IP].src
        destination_ip = packet[scapy.IP].dst
        protocol = packet[scapy.IP].proto

        print(f"[*] Source IP: {source_ip} --> Destination IP: {destination_ip} Protocol: {protocol}")

        if packet.haslayer(scapy.TCP):
            payload = packet[scapy.TCP].payload
            print("[+] TCP Packet:")
            print(payload)

        elif packet.haslayer(scapy.UDP):
            payload = packet[scapy.UDP].payload
            print("[+] UDP Packet:")
            print(payload)

        elif packet.haslayer(scapy.ICMP):
            payload = packet[scapy.ICMP].payload
            print("[+] ICMP Packet:")
            print(payload)

if __name__ == "__main__":
    interface = "eth0"  # Change this to your network interface
    sniff_packets(interface)
